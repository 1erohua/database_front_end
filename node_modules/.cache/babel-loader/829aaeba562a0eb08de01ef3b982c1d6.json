{"remainingRequest":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/babel-loader/lib/index.js!/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/src/views/Login.vue","mtime":1736517456395},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/cache-loader/dist/cjs.js","mtime":1735892181475},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/babel-loader/lib/index.js","mtime":1735892181655},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/cache-loader/dist/cjs.js","mtime":1735892181475},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/vue-loader/lib/index.js","mtime":1735892182047}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJMb2dpbiIsCiAgLy8g57uE5Lu25ZCN56ewCiAgLy8g5pWw5o2u5a6a5LmJ6YOo5YiGCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIC8vIOagoemqjOeUqOaIt+WQjei+k+WFpQogICAgdmFyIHZhbGlkYXRlVXNlcm5hbWUgPSBmdW5jdGlvbiB2YWxpZGF0ZVVzZXJuYW1lKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICBpZiAodmFsdWUgPT09ICIiKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCLor7fovpPlhaXnlKjmiLflkI0iKSk7IC8vIOWmguaenOeUqOaIt+WQjeS4uuepuu+8jOi/lOWbnumUmeivr+S/oeaBrwogICAgICB9IGVsc2UgewogICAgICAgIGNhbGxiYWNrKCk7IC8vIOWQpuWImemAmui/h+agoemqjAogICAgICB9CiAgICB9OyAvLyDmoKHpqozlr4bnoIHovpPlhaUKCgogICAgdmFyIHZhbGlkYXRlUGFzcyA9IGZ1bmN0aW9uIHZhbGlkYXRlUGFzcyhydWxlLCB2YWx1ZSwgY2FsbGJhY2spIHsKICAgICAgaWYgKHZhbHVlID09PSAiIikgewogICAgICAgIGNhbGxiYWNrKG5ldyBFcnJvcigi6K+36L6T5YWl5a+G56CBIikpOyAvLyDlpoLmnpzlr4bnoIHkuLrnqbrvvIzov5Tlm57plJnor6/kv6Hmga8KICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAodmFsdWUubGVuZ3RoIDwgMSkgewogICAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCLlr4bnoIHkuI3og73lsJHkuo4x5L2NIikpOyAvLyDlpoLmnpzlr4bnoIHplb/luqblsI/kuo425L2N77yM6L+U5Zue6ZSZ6K+v5L+h5oGvCiAgICAgICAgfQoKICAgICAgICBjYWxsYmFjaygpOyAvLyDlkKbliJnpgJrov4fmoKHpqowKICAgICAgfQogICAgfTsgLy8g5qCh6aqM6KeS6Imy6YCJ5oupCgoKICAgIHZhciB2YWxpZGF0ZVJvbGUgPSBmdW5jdGlvbiB2YWxpZGF0ZVJvbGUocnVsZSwgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICAgIGlmICh2YWx1ZSA9PT0gIiIpIHsKICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoIuivt+mAieaLqeinkuiJsiIpKTsgLy8g5aaC5p6c6KeS6Imy5Li656m677yM6L+U5Zue6ZSZ6K+v5L+h5oGvCiAgICAgIH0gZWxzZSB7CiAgICAgICAgY2FsbGJhY2soKTsgLy8g5ZCm5YiZ6YCa6L+H5qCh6aqMCiAgICAgIH0KICAgIH07CgogICAgcmV0dXJuIHsKICAgICAgLy8g6KGo5Y2V5pWw5o2u5a+56LGhCiAgICAgIGxvZ2luRm9ybTogewogICAgICAgIGNvZGU6ICIiLAogICAgICAgIC8vIOeUqOaIt+WQjQogICAgICAgIHBhc3N3b3JkOiAiIiwKICAgICAgICAvLyDlr4bnoIEKICAgICAgICByb2xlOiAiIiAvLyDop5LoibIKCiAgICAgIH0sCiAgICAgIC8vIOihqOWNleagoemqjOinhOWImQogICAgICBydWxlczogewogICAgICAgIGNvZGU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIHRyaWdnZXI6ICJibHVyIiwKICAgICAgICAgIHZhbGlkYXRvcjogdmFsaWRhdGVVc2VybmFtZQogICAgICAgIH0gLy8g55So5oi35ZCN5b+F5aGr77yM5aSx5Y6754Sm54K55pe26Kem5Y+R5qCh6aqMCiAgICAgICAgXSwKICAgICAgICBwYXNzd29yZDogW3sKICAgICAgICAgIHZhbGlkYXRvcjogdmFsaWRhdGVQYXNzLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfV0sCiAgICAgICAgLy8g5a+G56CB5qCh6aqM77yM5aSx5Y6754Sm54K55pe26Kem5Y+R5qCh6aqMCiAgICAgICAgcm9sZTogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgdHJpZ2dlcjogImNoYW5nZSIsCiAgICAgICAgICB2YWxpZGF0b3I6IHZhbGlkYXRlUm9sZQogICAgICAgIH1dIC8vIOinkuiJsuagoemqjO+8jOmAieaLqeaXtuinpuWPkeagoemqjAoKICAgICAgfQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOaPkOS6pOeZu+W9leihqOWNlQogICAgc3VibWl0Rm9ybTogZnVuY3Rpb24gc3VibWl0Rm9ybShsb2dpbkZvcm0pIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuJHJlZnNbbG9naW5Gb3JtXS52YWxpZGF0ZShmdW5jdGlvbiAodmFsaWQpIHsKICAgICAgICAvLyDmoKHpqozooajljZUKICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgIC8vIOWmguaenOagoemqjOmAmui/h++8jOiwg+eUqOeZu+W9leaOpeWPowogICAgICAgICAgY29uc29sZS5sb2coIui/meaYr+esrOS4gOatpSIpOwoKICAgICAgICAgIF90aGlzLiRzdG9yZS5kaXNwYXRjaCgibG9naW4iLCBfdGhpcy5sb2dpbkZvcm0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICBjb25zb2xlLmxvZygi6L+Z5piv56ys5LqM5q2lIik7CiAgICAgICAgICAgIHZhciBkYXRhID0gcmVzLmRhdGE7IC8vIOino+aehOi/lOWbnueahOaVsOaNrgoKICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7CgogICAgICAgICAgICBfdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgbWVzc2FnZTogZGF0YS5tZXNzYWdlLAogICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIgogICAgICAgICAgICB9KTsgLy8g5pi+56S65oiQ5Yqf5raI5oGvCiAgICAgICAgICAgIC8vIOiOt+WPlueZu+W9leeUqOaIt+S/oeaBrwogICAgICAgICAgICAvLyB0aGlzLiRzdG9yZS5kaXNwYXRjaCgiZ2V0SW5mbyIsZGF0YSkKCgogICAgICAgICAgICBfdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgICAgIHBhdGg6IF90aGlzLnJlZGlyZWN0IHx8ICcvJwogICAgICAgICAgICB9KTsgLy8g6Lez6L2s5Yiw6aaW6aG15oiW5oyH5a6a6aG16Z2iCgogICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgIC8vIOeZu+W9leWksei0peaXtuaYvuekuumUmeivr+S/oeaBrwogICAgICAgICAgICBfdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZSwKICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCJlcnJvciBzdWJtaXQhISIpOyAvLyDmoKHpqozlpLHotKXvvIzmiZPljbDplJnor6/kv6Hmga8KCiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICAvLyDph43nva7ooajljZUKICAgIHJlc2V0Rm9ybTogZnVuY3Rpb24gcmVzZXRGb3JtKGZvcm1OYW1lKSB7CiAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnJlc2V0RmllbGRzKCk7IC8vIOiwg+eUqEVsZW1lbnQgVUnnmoRyZXNldEZpZWxkc+aWueazlemHjee9ruihqOWNlQogICAgfQogIH0KfTs="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- <template>\n  <div class=\"login\">\n    <h2>乐队与乐迷管理系统</h2>\n    <el-form\n      :model=\"loginForm\"\n      status-icon\n      :rules=\"rules\"\n      ref=\"loginForm\"\n      label-width=\"100px\"\n      class=\"demo-loginForm login-form\"\n    >\n      <el-form-item label=\"用户名\" prop=\"code\">\n        <el-input\n          type=\"text\"\n          autocomplete=\"off\"\n          v-model=\"loginForm.code\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"密码\" prop=\"password\">\n        <el-input\n          type=\"password\"\n          v-model=\"loginForm.password\"\n          autocomplete=\"off\"\n        ></el-input>\n      </el-form-item>\n\n      <el-form-item login-form-submit>\n        <el-button\n          class=\"login-submit\"\n          type=\"primary\"\n          @click=\"submitForm('loginForm')\"\n          >登录</el-button\n        >\n      </el-form-item>\n      <p>登录账号admin 密码123456</p>\n    </el-form>\n  </div>\n</template> -->\n\n<template>\n  <div class=\"login\">\n    <h2>乐队与乐迷管理系统</h2>\n    <el-form\n      :model=\"loginForm\"\n      status-icon\n      :rules=\"rules\"\n      ref=\"loginForm\"\n      label-width=\"100px\"\n      class=\"demo-loginForm login-form\"\n    >\n      <el-form-item label=\"用户名\" prop=\"code\">\n        <el-input\n          type=\"text\"\n          autocomplete=\"off\"\n          v-model=\"loginForm.code\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"密码\" prop=\"password\">\n        <el-input\n          type=\"password\"\n          v-model=\"loginForm.password\"\n          autocomplete=\"off\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"角色\" prop=\"role\">\n        <el-select v-model=\"loginForm.role\" placeholder=\"请选择角色\">\n          <el-option label=\"Manager\" value=\"Manager\"></el-option>\n          <el-option label=\"BandMember\" value=\"BandMember\"></el-option>\n          <el-option label=\"Fan\" value=\"Fan\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item login-form-submit>\n        <el-button\n          class=\"login-submit\"\n          type=\"primary\"\n          @click=\"submitForm('loginForm')\"\n          >登录</el-button\n        >\n      </el-form-item>\n      <p>登录账号admin 密码123456</p>\n    </el-form>\n  </div>\n</template>\n\n\n\n\n\n\n<!-- \n<script>\nexport default {\n  name: \"Login\",  // 组件名称\n\n  // 数据定义部分\n  data() {\n    // 校验用户名输入\n    const validateUsername = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请输入用户名\"));  // 如果用户名为空，返回错误信息\n      } else {\n        callback();  // 否则通过校验\n      }\n    };\n\n    // 校验密码输入\n    const validatePass = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请输入密码\"));  // 如果密码为空，返回错误信息\n      } else {\n        if (value.length < 6) {\n          callback(new Error(\"密码不能少于6位\"));  // 如果密码长度小于6位，返回错误信息\n        }\n        callback();  // 否则通过校验\n      }\n    };\n\n    return {\n      // 表单数据对象\n      loginForm: {\n        code: \"\",  // 用户名\n        password: \"\",  // 密码\n      },\n      // 表单校验规则\n      rules: {\n        code: [\n          { required: true, trigger: \"blur\", validator: validateUsername },  // 用户名必填，失去焦点时触发校验\n        ],\n        password: [{ validator: validatePass, trigger: \"blur\" }],  // 密码校验，失去焦点时触发校验\n      },\n    };\n  },\n  methods: {\n    // 提交登录表单\n    submitForm(loginForm) {\n      this.$refs[loginForm].validate((valid) => {  // 校验表单\n        if (valid) {\n          // 如果校验通过，调用登录接口\n          this.$store.dispatch(\"login\", this.loginForm).then((res) => {\n            let {data} = res  // 解构返回的数据\n            console.log(data);\n            if(data.code == 1000){  // 如果返回码为1000，表示登录成功\n              this.$message({ message:data.message, type: \"success\" });  // 显示成功消息\n              // 获取登录用户信息\n              // this.$store.dispatch(\"getInfo\",data)\n\n              this.$router.push({ path: this.redirect || '/' })  // 跳转到首页或指定页面\n            }else {\n              this.$message({ message:data.message, type: \"warning\" });  // 显示警告消息\n            }\n          }).catch((error)=> {\n            // 登录失败时显示错误信息\n            this.$message({ message: error.message, type: \"error\" });\n          });\n        } else {\n          console.log(\"error submit!!\");  // 校验失败，打印错误信息\n          return false;\n        }\n      });\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields();  // 调用Element UI的resetFields方法重置表单\n    },\n  },\n};\n</script>\n -->\n\n<script>\nexport default {\n  name: \"Login\",  // 组件名称\n\n  // 数据定义部分\n  data() {\n    // 校验用户名输入\n    const validateUsername = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请输入用户名\"));  // 如果用户名为空，返回错误信息\n      } else {\n        callback();  // 否则通过校验\n      }\n    };\n\n    // 校验密码输入\n    const validatePass = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请输入密码\"));  // 如果密码为空，返回错误信息\n      } else {\n        if (value.length < 1) {\n          callback(new Error(\"密码不能少于1位\"));  // 如果密码长度小于6位，返回错误信息\n        }\n        callback();  // 否则通过校验\n      }\n    };\n\n    // 校验角色选择\n    const validateRole = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请选择角色\"));  // 如果角色为空，返回错误信息\n      } else {\n        callback();  // 否则通过校验\n      }\n    };\n\n    return {\n      // 表单数据对象\n      loginForm: {\n        code: \"\",  // 用户名\n        password: \"\",  // 密码\n        role: \"\",  // 角色\n      },\n      // 表单校验规则\n      rules: {\n        code: [\n          { required: true, trigger: \"blur\", validator: validateUsername },  // 用户名必填，失去焦点时触发校验\n        ],\n        password: [{ validator: validatePass, trigger: \"blur\" }],  // 密码校验，失去焦点时触发校验\n        role: [{ required: true, trigger: \"change\", validator: validateRole }],  // 角色校验，选择时触发校验\n      },\n    };\n  },\n  methods: {\n    // 提交登录表单\n    submitForm(loginForm) {\n      this.$refs[loginForm].validate((valid) => {  // 校验表单\n        if (valid) {\n          // 如果校验通过，调用登录接口\n          console.log(\"这是第一步\")\n          this.$store.dispatch(\"login\", this.loginForm).then((res) => {\n\n          console.log(\"这是第二步\")\n          let {data} = res  // 解构返回的数据\n\n          console.log(data);\n\n          this.$message({ message:data.message, type: \"success\" });  // 显示成功消息\n\n          // 获取登录用户信息\n          // this.$store.dispatch(\"getInfo\",data)\n          this.$router.push({ path: this.redirect || '/' })  // 跳转到首页或指定页面\n          }).catch((error)=> {\n            // 登录失败时显示错误信息\n            this.$message({ message: error.message, type: \"error\" });\n          });\n        } else {\n          console.log(\"error submit!!\");  // 校验失败，打印错误信息\n          return false;\n        }\n      });\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields();  // 调用Element UI的resetFields方法重置表单\n    },\n  },\n};\n</script>\n\n\n\n\n<style lang=\"scss\" scoped>\n.login {\n  padding-top: 100px;  // 登录容器上边距\n  text-align: center;  // 内容居中\n}\nh2 {\n  color: #500877;  // 标题颜色\n  padding: 20px;  // 标题内边距\n}\n.login-form {\n  margin: auto;  // 表单居中\n  max-width: 500px;  // 表单最大宽度\n  .el-form-item__label {\n    color: #000000;  // 表单标签颜色\n  }\n  \n}\n.login-form-submit {\n  text-align: center;  // 提交按钮居中\n}\n.login-submit {\n  display: block;  // 按钮块级显示\n  margin: 0 auto;  // 按钮居中\n  text-align: center;  // 按钮文本居中\n  width: 200px;  // 按钮宽度\n}\n</style>"],"sourceRoot":"src/views"}]}