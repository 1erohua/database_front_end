{"remainingRequest":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/babel-loader/lib/index.js!/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/src/views/band/band_album/BandAlbum.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/src/views/band/band_album/BandAlbum.vue","mtime":1736428329028},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/cache-loader/dist/cjs.js","mtime":1735892181475},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/babel-loader/lib/index.js","mtime":1735892181655},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/cache-loader/dist/cjs.js","mtime":1735892181475},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/vue-loader/lib/index.js","mtime":1735892182047}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvemVyb2h1YS9hcHBsaWNhdGlvbi9Gcm9udEVuZC90c2V0L3N0dV9tYW5hZ2VfZnJvbnQtbWFpbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9ob21lL3plcm9odWEvYXBwbGljYXRpb24vRnJvbnRFbmQvdHNldC9zdHVfbWFuYWdlX2Zyb250LW1haW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBnZXRCYW5kQWxidW1zLCBkZWxldGVCYW5kQWxidW0gfSBmcm9tICJAL2FwaS9yZXF1ZXN0IjsKaW1wb3J0IFBhZ2luYXRpb24gZnJvbSAiQC9jb21wb25lbnRzL3BhZ2luYXRpb24iOwppbXBvcnQgRGlhbG9nIGZyb20gIi4vRGlhbG9nLnZ1ZSI7CmltcG9ydCBtb21lbnQgZnJvbSAibW9tZW50IjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJCYW5kQWxidW0iLAogIGNvbXBvbmVudHM6IHsKICAgIFBhZ2luYXRpb246IFBhZ2luYXRpb24sCiAgICBEaWFsb2c6IERpYWxvZwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIC8vIOiOt+WPluaJgOacieS4k+i+keS/oeaBrwogICAgdGhpcy5nZXRBbGJ1bU1lcygpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhYmxlRGF0YTogW10sCiAgICAgIHBhZ2lEYXRhQWxsOiAwLAogICAgICBkaWFsb2dFZGl0VmlzaWJsZTogewogICAgICAgIHZhbHVlOiBmYWxzZQogICAgICB9LAogICAgICBhbGJ1bUluZm86IHt9LAogICAgICBzZWxlY3RlZERhdGE6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy8g6I635Y+W5LiT6L6R5L+h5oGvCiAgICBnZXRBbGJ1bU1lczogZnVuY3Rpb24gZ2V0QWxidW1NZXMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgYmFuZElkID0gdGhpcy4kc3RvcmUuc3RhdGUuYmFuZElkOwogICAgICBnZXRCYW5kQWxidW1zKGJhbmRJZCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMudGFibGVEYXRhID0gcmVzLmRhdGE7CiAgICAgICAgX3RoaXMucGFnaURhdGFBbGwgPSBNYXRoLmNlaWwocmVzLmRhdGEubGVuZ3RoIC8gMTApOyAvLyDlgYforr7mr4/pobXmmL7npLoxMOadoeaVsOaNrgogICAgICB9KTsKICAgIH0sCiAgICAvLyDliIbpobXot7PovawKICAgIGN1cnJlbnRDaGFuZ2U6IGZ1bmN0aW9uIGN1cnJlbnRDaGFuZ2UoaXRlbSkgewogICAgICB0aGlzLmdldEFsYnVtTWVzKGl0ZW0gLSAxKTsKICAgIH0sCiAgICAvLyDkv67mlLnkuJPovpHkv6Hmga8KICAgIGhhbmRsZUVkaXQ6IGZ1bmN0aW9uIGhhbmRsZUVkaXQoaW5kZXgsIHJvdykgewogICAgICB0aGlzLmFsYnVtSW5mbyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgcm93KSwge30sIHsKICAgICAgICBSZWxlYXNlRGF0ZTogbW9tZW50KHJvdy5SZWxlYXNlRGF0ZSkuZm9ybWF0KCdZWVlZLU1NLUREIEhIOm1tOnNzJykKICAgICAgfSk7CiAgICAgIHRoaXMuZGlhbG9nRWRpdFZpc2libGUudmFsdWUgPSB0cnVlOwogICAgfSwKICAgIC8vIOWIoOmZpOS4k+i+keS/oeaBrwogICAgaGFuZGxlRGVsZXRlOiBmdW5jdGlvbiBoYW5kbGVEZWxldGUoaW5kZXgsIHJvdykgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuJGNvbmZpcm0oIuehruiupOWIoOmZpO+8nyIpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBiYW5kSWQgPSBfdGhpczIuJHN0b3JlLnN0YXRlLmJhbmRJZDsKICAgICAgICBkZWxldGVCYW5kQWxidW0oYmFuZElkLCByb3cuQWxidW1JRCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpczIuJG1lc3NhZ2UoewogICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICAgIG1lc3NhZ2U6ICLliKDpmaTmiJDlip8hIgogICAgICAgICAgfSk7CgogICAgICAgICAgX3RoaXMyLmdldEFsYnVtTWVzKCk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgICAgX3RoaXMyLiRtZXNzYWdlLmVycm9yKCLliKDpmaTlpLHotKUhIik7CiAgICAgICAgfSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczIuJG1lc3NhZ2UoewogICAgICAgICAgdHlwZTogImluZm8iLAogICAgICAgICAgbWVzc2FnZTogIuW3suWPlua2iOWIoOmZpCIKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5om56YeP5Yig6ZmkCiAgICBiYXRjaERlbGV0ZTogZnVuY3Rpb24gYmF0Y2hEZWxldGUoZXZlbnQpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLmxvc3RCbHVyKGV2ZW50KTsKICAgICAgdGhpcy4kY29uZmlybSgi56Gu6K6k5Yig6Zmk6YCJ5Lit77yfIikudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIGJhbmRJZCA9IF90aGlzMy4kc3RvcmUuc3RhdGUuYmFuZElkOwoKICAgICAgICBfdGhpczMuc2VsZWN0ZWREYXRhLmZvckVhY2goIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShpdGVtLCBpbmRleCkgewogICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlbGV0ZUJhbmRBbGJ1bShiYW5kSWQsIGl0ZW0uQWxidW1JRCk7CgogICAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgICAgX3RoaXMzLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJpbmZvIiwKICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICLnrKwiICsgKGluZGV4ICsgMSkgKyAi5p2h6K6w5b2V77yM5Yig6Zmk5oiQ5YqfISIKICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgICAgICB9KSk7CgogICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChfeCwgX3gyKSB7CiAgICAgICAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICB9OwogICAgICAgIH0oKSk7CgogICAgICAgIF90aGlzMy4kbWVzc2FnZSh7CiAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICBtZXNzYWdlOiAi5YWo6YOo5Yig6Zmk5oiQ5YqfISIKICAgICAgICB9KTsKCiAgICAgICAgX3RoaXMzLmdldEFsYnVtTWVzKCk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczMuJG1lc3NhZ2UoewogICAgICAgICAgdHlwZTogImluZm8iLAogICAgICAgICAgbWVzc2FnZTogIuW3suWPlua2iOWIoOmZpOmAieS4rSIKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5paw5aKe5LiT6L6RCiAgICBuZXdBZGQ6IGZ1bmN0aW9uIG5ld0FkZChldmVudCkgewogICAgICB0aGlzLmxvc3RCbHVyKGV2ZW50KTsKICAgICAgdGhpcy5hbGJ1bUluZm8gPSB7CiAgICAgICAgUmVsZWFzZURhdGU6IG1vbWVudCgpLmZvcm1hdCgnWVlZWS1NTS1ERCBISDptbTpzcycpCiAgICAgIH07IC8vIOa4heepuuihqOWNleW5tuiuvue9rum7mOiupOaXpeacnwoKICAgICAgdGhpcy5kaWFsb2dFZGl0VmlzaWJsZS52YWx1ZSA9IHRydWU7CiAgICB9LAogICAgLy8g5Yi35paw5LiT6L6R6KGoCiAgICByZWZyZXNoOiBmdW5jdGlvbiByZWZyZXNoKGV2ZW50KSB7CiAgICAgIHRoaXMubG9zdEJsdXIoZXZlbnQpOwogICAgICB0aGlzLmdldEFsYnVtTWVzKCk7CiAgICB9LAogICAgLy8g5aSE55CG6YCJ5Lit6aG5CiAgICBoYW5kbGVDdXJyZW50Q2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVDdXJyZW50Q2hhbmdlKHJvd3MpIHsKICAgICAgdGhpcy5zZWxlY3RlZERhdGEgPSByb3dzOwogICAgfSwKICAgIC8vIOWkseeEpuWkhOeQhgogICAgbG9zdEJsdXI6IGZ1bmN0aW9uIGxvc3RCbHVyKGV2ZW50KSB7CiAgICAgIHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7CgogICAgICBpZiAodGFyZ2V0Lm5vZGVOYW1lID09ICJTUEFOIikgewogICAgICAgIHRhcmdldCA9IGV2ZW50LnRhcmdldC5wYXJlbnROb2RlOwogICAgICB9CgogICAgICB0YXJnZXQuYmx1cigpOwogICAgfSwKICAgIC8vIOabtOaWsOS4k+i+keS/oeaBrwogICAgdXBkYXRlQWxidW06IGZ1bmN0aW9uIHVwZGF0ZUFsYnVtKGRhdGEpIHsKICAgICAgdGhpcy5nZXRBbGJ1bU1lcygpOwogICAgfSwKICAgIC8vIOagvOW8j+WMluaXpeacnwogICAgZm9ybWF0RGF0ZTogZnVuY3Rpb24gZm9ybWF0RGF0ZShkYXRlKSB7CiAgICAgIHJldHVybiBkYXRlID8gbW9tZW50KGRhdGUpLmZvcm1hdCgnWVlZWS1NTS1ERCBISDptbTpzcycpIDogJyc7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["BandAlbum.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"band-album\">\n    <div class=\"container_wrap\">\n      <div class=\"batchOption\">\n        <el-button icon=\"el-icon-plus\" type=\"success\" @click=\"newAdd($event)\"\n          >新增专辑</el-button\n        >\n        <el-button\n          icon=\"el-icon-delete\"\n          type=\"danger\"\n          @click=\"batchDelete($event)\"\n          >删除选中</el-button\n        >\n        <el-button\n          icon=\"el-icon-refresh\"\n          type=\"warning\"\n          @click=\"refresh($event)\"\n          >刷新专辑表</el-button\n        >\n      </div>\n\n      <el-table\n        :data=\"tableData\"\n        border\n        class=\"\"\n        @selection-change=\"handleCurrentChange\"\n      >\n        <el-table-column type=\"selection\" width=\"55\"> </el-table-column>\n        <el-table-column v-if=\"false\" prop=\"AlbumID\" label=\"专辑ID\" width=\"150\">\n        </el-table-column>\n        <el-table-column prop=\"AlbumName\" label=\"专辑名称\" width=\"150\">\n        </el-table-column>\n        <el-table-column prop=\"ReleaseDate\" label=\"发布日期\" width=\"150\">\n          <template slot-scope=\"scope\">\n            {{ formatDate(scope.row.ReleaseDate) }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"AlbumDescription\" label=\"专辑描述\" width=\"200\">\n        </el-table-column>\n        <el-table-column prop=\"BandID\" label=\"乐队ID\" width=\"150\">\n        </el-table-column>\n        <el-table-column prop=\"AlbumCode\" label=\"专辑代码\" width=\"150\">\n        </el-table-column>\n\n        <el-table-column label=\"操作\">\n          <template slot-scope=\"scope\">\n            <el-button\n              size=\"mini\"\n              icon=\"el-icon-edit\"\n              @click=\"handleEdit(scope.$index, scope.row)\"\n              >修改</el-button\n            >\n            <el-button\n              size=\"mini\"\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              @click=\"handleDelete(scope.$index, scope.row)\"\n              >删除</el-button\n            >\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n\n    <div class=\"pagination\">\n      <Pagination\n        :pageCount=\"pagiDataAll\"\n        @cpnPageJumpTo=\"currentChange\"\n      ></Pagination>\n    </div>\n\n    <!-- 弹窗 -->\n    <Dialog\n      :dialogEditVisible=\"dialogEditVisible\"\n      :albumInfo=\"albumInfo\"\n      @updateAlbum=\"updateAlbum\"\n    ></Dialog>\n  </div>\n</template>\n\n<script>\nimport { getBandAlbums, deleteBandAlbum } from \"@/api/request\";\nimport Pagination from \"@/components/pagination\";\nimport Dialog from \"./Dialog.vue\";\nimport moment from \"moment\";\n\nexport default {\n  name: \"BandAlbum\",\n  components: {\n    Pagination,\n    Dialog,\n  },\n  created() {\n    // 获取所有专辑信息\n    this.getAlbumMes();\n  },\n  data() {\n    return {\n      tableData: [],\n      pagiDataAll: 0,\n      dialogEditVisible: { value: false },\n      albumInfo: {},\n      selectedData: [],\n    };\n  },\n  methods: {\n    // 获取专辑信息\n    getAlbumMes() {\n      const bandId = this.$store.state.bandId;\n      getBandAlbums(bandId).then((res) => {\n        this.tableData = res.data;\n        this.pagiDataAll = Math.ceil(res.data.length / 10); // 假设每页显示10条数据\n      });\n    },\n    // 分页跳转\n    currentChange(item) {\n      this.getAlbumMes(item - 1);\n    },\n    // 修改专辑信息\n    handleEdit(index, row) {\n      this.albumInfo = { \n        ...row, \n        ReleaseDate: moment(row.ReleaseDate).format('YYYY-MM-DD HH:mm:ss') \n      };\n      this.dialogEditVisible.value = true;\n    },\n    // 删除专辑信息\n    handleDelete(index, row) {\n      this.$confirm(\"确认删除？\")\n        .then(() => {\n          const bandId = this.$store.state.bandId;\n          deleteBandAlbum(bandId, row.AlbumID)\n            .then(() => {\n              this.$message({\n                type: \"success\",\n                message: \"删除成功!\",\n              });\n              this.getAlbumMes();\n            })\n            .catch((err) => {\n              this.$message.error(\"删除失败!\");\n            });\n        })\n        .catch(() => {\n          this.$message({\n            type: \"info\",\n            message: \"已取消删除\",\n          });\n        });\n    },\n    // 批量删除\n    batchDelete(event) {\n      this.lostBlur(event);\n      this.$confirm(\"确认删除选中？\")\n        .then(() => {\n          const bandId = this.$store.state.bandId;\n          this.selectedData.forEach(async (item, index) => {\n            await deleteBandAlbum(bandId, item.AlbumID);\n            this.$message({\n              type: \"info\",\n              message: \"第\" + (index + 1) + \"条记录，删除成功!\",\n            });\n          });\n          this.$message({\n            type: \"success\",\n            message: \"全部删除成功!\",\n          });\n          this.getAlbumMes();\n        })\n        .catch(() => {\n          this.$message({\n            type: \"info\",\n            message: \"已取消删除选中\",\n          });\n        });\n    },\n    // 新增专辑\n    newAdd(event) {\n      this.lostBlur(event);\n      this.albumInfo = { \n        ReleaseDate: moment().format('YYYY-MM-DD HH:mm:ss') \n      }; // 清空表单并设置默认日期\n      this.dialogEditVisible.value = true;\n    },\n    // 刷新专辑表\n    refresh(event) {\n      this.lostBlur(event);\n      this.getAlbumMes();\n    },\n    // 处理选中项\n    handleCurrentChange(rows) {\n      this.selectedData = rows;\n    },\n    // 失焦处理\n    lostBlur(event) {\n      let target = event.target;\n      if (target.nodeName == \"SPAN\") {\n        target = event.target.parentNode;\n      }\n      target.blur();\n    },\n    // 更新专辑信息\n    updateAlbum(data) {\n      this.getAlbumMes();\n    },\n    // 格式化日期\n    formatDate(date) {\n      return date ? moment(date).format('YYYY-MM-DD HH:mm:ss') : '';\n    }\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.batchOption {\n  margin-bottom: 5px;\n  .el-button {\n    font-size: 10px;\n    padding: 5px;\n  }\n}\n.pagination {\n  text-align: center;\n  margin-top: 15px;\n}\n</style>"],"sourceRoot":"src/views/band/band_album"}]}