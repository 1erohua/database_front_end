{"remainingRequest":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/babel-loader/lib/index.js!/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/src/views/stuCharts/components/Emap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/src/views/stuCharts/components/Emap.vue","mtime":1651133434000},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/cache-loader/dist/cjs.js","mtime":1735892181475},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/babel-loader/lib/index.js","mtime":1735892181655},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/cache-loader/dist/cjs.js","mtime":1735892181475},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/vue-loader/lib/index.js","mtime":1735892182047}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvaG9tZS96ZXJvaHVhL2FwcGxpY2F0aW9uL0Zyb250RW5kL3RzZXQvc3R1X21hbmFnZV9mcm9udC1tYWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3plcm9odWEvYXBwbGljYXRpb24vRnJvbnRFbmQvdHNldC9zdHVfbWFuYWdlX2Zyb250LW1haW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLyDlvJXlhaXln7rmnKzmqKHmnb8KLy8gbGV0IGVjaGFydHMgPSByZXF1aXJlKCdlY2hhcnRzL2xpYi9lY2hhcnRzJykKaW1wb3J0IGVjaGFydHMgZnJvbSAiZWNoYXJ0cyI7CmltcG9ydCAiZWNoYXJ0cy9tYXAvanMvY2hpbmEuanMiOwppbXBvcnQgeyBzZWxlY3RQcm92aW5jZSB9IGZyb20gIkAvYXBpL3JlcXVlc3QiOyAvLyDlvJXlhaXmn7Hnirblm77nu4Tku7YKCnJlcXVpcmUoImVjaGFydHMvbGliL2NoYXJ0L2JhciIpOyAvLyDlvJXlhaXmj5DnpLrmoYblkox0aXRsZee7hOS7tgoKCnJlcXVpcmUoImVjaGFydHMvbGliL2NvbXBvbmVudC90b29sdGlwIik7CgpyZXF1aXJlKCJlY2hhcnRzL2xpYi9jb21wb25lbnQvdGl0bGUiKTsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiZW1hcCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFsbERhdGE6IFtdCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0U2VsZWN0Q2xhc3NOdWJlcigpOwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgLy8gY29uc29sZS5sb2codGhpcy5hbGxEYXRhKTsKICAgIC8vIOW9k+aVsOaNruWKoOi9veaIkOWKn+iwg+eUqAogICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgIF90aGlzLmVjaGFydHNJbml0KCk7CiAgICB9LCA1MDApOwogIH0sCiAgbWV0aG9kczogewogICAgZWNoYXJ0c0luaXQ6IGZ1bmN0aW9uIGVjaGFydHNJbml0KCkgewogICAgICAvLyDln7rkuo7lh4blpIflpb3nmoRkb23vvIzliJ3lp4vljJZlY2hhcnRz5a6e5L6LCiAgICAgIHZhciBlaGFydHNyZWYgPSB0aGlzLiRyZWZzLmNoYXJ0czsgLy8gbGV0IG15Q2hhcnQgPSB0aGlzLiRlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm1hcCIpKTsKCiAgICAgIHZhciBteUNoYXJ0ID0gZWNoYXJ0cy5pbml0KGVoYXJ0c3JlZik7IC8vIOe7mOWItuihqOagvAoKICAgICAgbXlDaGFydC5zZXRPcHRpb24oewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0OiAi55Sf5rqQ5Zyw5a2m55Sf5YiG5biDIiwKICAgICAgICAgIHRvcDogIjUlIiwKICAgICAgICAgIGxlZnQ6ICIzJSIsCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFNpemU6IDE4LAogICAgICAgICAgICBmb250V2VpZ2h0OiAibGlnaHRlciIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHt9LAogICAgICAgIHRvb2xib3g6IHsKICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICBvcmllbnQ6ICJ2ZXJ0aWNhbCIsCiAgICAgICAgICBsZWZ0OiAicmlnaHQiLAogICAgICAgICAgdG9wOiAiY2VudGVyIiwKICAgICAgICAgIGZlYXR1cmU6IHsKICAgICAgICAgICAgZGF0YVZpZXc6IHsKICAgICAgICAgICAgICByZWFkT25seTogZmFsc2UKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcmVzdG9yZToge30sCiAgICAgICAgICAgIHNhdmVBc0ltYWdlOiB7fQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdmlzdWFsTWFwOiB7CiAgICAgICAgICBtaW46IDAsCiAgICAgICAgICBtYXg6IDI1MDAsCiAgICAgICAgICB0ZXh0OiBbIkhpZ2giLCAiTG93Il0sCiAgICAgICAgICByZWFsdGltZTogZmFsc2UsCiAgICAgICAgICBjYWxjdWxhYmxlOiB0cnVlLAogICAgICAgICAgaW5SYW5nZTogewogICAgICAgICAgICBjb2xvcjogWyJsaWdodHNreWJsdWUiLCAieWVsbG93IiwgIm9yYW5nZXJlZCJdCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBuYW1lOiAi5oC75pWwIiwKICAgICAgICAgIHR5cGU6ICJtYXAiLAogICAgICAgICAgbWFwOiAiY2hpbmEiLAogICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgIGRhdGE6IHRoaXMuYWxsRGF0YQogICAgICAgIH1dCiAgICAgIH0pOwogICAgfSwKICAgIC8vIOaVsOaNruivt+axggogICAgZ2V0U2VsZWN0Q2xhc3NOdWJlcjogZnVuY3Rpb24gZ2V0U2VsZWN0Q2xhc3NOdWJlcigpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBfdGhpczIkYWxsRGF0YTsKCiAgICAgICAgdmFyIHJlc3VsdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBzZWxlY3RQcm92aW5jZSgpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHJlc3VsdCk7CiAgICAgICAgICAgICAgICAvLyB0aGlzLmFsbERhdGEgPSByZXN1bHQuZGF0YS5kYXRhOwogICAgICAgICAgICAgICAgLy8gLy8gY29uc29sZS5sb2codGhpcy5hbGxEYXRhKTsKICAgICAgICAgICAgICAgIC8vIGxldCB0aGF0ID0gdGhpczsKICAgICAgICAgICAgICAgIC8vIHRoaXMuYWxsRGF0YS5mb3JFYWNoKChlbGVtZW50LCBpbmRleCkgPT4gewogICAgICAgICAgICAgICAgLy8gICB0aGF0LnhEYXRhW2luZGV4XSA9IGVsZW1lbnQubmFtZTsKICAgICAgICAgICAgICAgIC8vICAgdGhhdC5zRGF0YVtpbmRleF0gPSBlbGVtZW50Lm51bWJlcjsKICAgICAgICAgICAgICAgIC8vIH0pOwogICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocmVzdWx0KTsKICAgICAgICAgICAgICAgIChfdGhpczIkYWxsRGF0YSA9IF90aGlzMi5hbGxEYXRhKS5wdXNoLmFwcGx5KF90aGlzMiRhbGxEYXRhLCBfdG9Db25zdW1hYmxlQXJyYXkocmVzdWx0LmRhdGEpKTsgLy8gY29uc29sZS5sb2codGhpcy5hbGxEYXRhKTsKCgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Emap.vue"],"names":[],"mappings":";;;;;;;;;;;;AAUA;AACA;AACA,OAAA,OAAA,MAAA,SAAA;AACA,OAAA,yBAAA;AACA,SAAA,cAAA,QAAA,eAAA,C,CACA;;AACA,OAAA,CAAA,uBAAA,CAAA,C,CACA;;;AACA,OAAA,CAAA,+BAAA,CAAA;;AACA,OAAA,CAAA,6BAAA,CAAA;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAPA,qBAOA;AACA,SAAA,mBAAA;AACA,GATA;AAUA,EAAA,OAVA,qBAUA;AAAA;;AACA;AACA;AAEA,IAAA,UAAA,CAAA,YAAA;AACA,MAAA,KAAA,CAAA,WAAA;AACA,KAFA,EAEA,GAFA,CAAA;AAGA,GAjBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA;AACA,UAAA,SAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAFA,CAGA;;AACA,UAAA,OAAA,GAAA,OAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAJA,CAKA;;AACA,MAAA,OAAA,CAAA,SAAA,CAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,GAAA,EAAA,IAFA;AAGA,UAAA,IAAA,EAAA,IAHA;AAIA,UAAA,SAAA,EAAA;AACA,YAAA,QAAA,EAAA,EADA;AAEA,YAAA,UAAA,EAAA;AAFA;AAJA,SADA;AAUA,QAAA,OAAA,EAAA,EAVA;AAWA,QAAA,OAAA,EAAA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,MAAA,EAAA,UAFA;AAGA,UAAA,IAAA,EAAA,OAHA;AAIA,UAAA,GAAA,EAAA,QAJA;AAKA,UAAA,OAAA,EAAA;AACA,YAAA,QAAA,EAAA;AAAA,cAAA,QAAA,EAAA;AAAA,aADA;AAEA,YAAA,OAAA,EAAA,EAFA;AAGA,YAAA,WAAA,EAAA;AAHA;AALA,SAXA;AAsBA,QAAA,SAAA,EAAA;AACA,UAAA,GAAA,EAAA,CADA;AAEA,UAAA,GAAA,EAAA,IAFA;AAGA,UAAA,IAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAHA;AAIA,UAAA,QAAA,EAAA,KAJA;AAKA,UAAA,UAAA,EAAA,IALA;AAMA,UAAA,OAAA,EAAA;AACA,YAAA,KAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,WAAA;AADA;AANA,SAtBA;AAgCA,QAAA,MAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,IAAA,EAAA,KAFA;AAGA,UAAA,GAAA,EAAA,OAHA;AAIA,UAAA,KAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA,WAJA;AAOA,UAAA,IAAA,EAAA,KAAA;AAPA,SADA;AAhCA,OAAA;AA4CA,KAnDA;AAqDA;AACA,IAAA,mBAtDA,iCAsDA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,cAAA,EADA;;AAAA;AACA,gBAAA,MADA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAA,MAAA,CAAA,OAAA,EAAA,IAAA,0CAAA,MAAA,CAAA,IAAA,GAXA,CAYA;;;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAnEA;AAnBA,CAAA","sourcesContent":["<template>\n  <div\n    class=\"emap\"\n    id=\"emap\"\n    ref=\"charts\"\n    :style=\"{ width: '100%', height: '400px' }\"\n  ></div>\n</template>\n\n<script>\n// 引入基本模板\n// let echarts = require('echarts/lib/echarts')\nimport echarts from \"echarts\";\nimport \"echarts/map/js/china.js\";\nimport { selectProvince } from \"@/api/request\";\n// 引入柱状图组件\nrequire(\"echarts/lib/chart/bar\");\n// 引入提示框和title组件\nrequire(\"echarts/lib/component/tooltip\");\nrequire(\"echarts/lib/component/title\");\n\nexport default {\n  name: \"emap\",\n  data() {\n    return {\n      allData: [],\n    };\n  },\n  created() {\n    this.getSelectClassNuber();\n  },\n  mounted() {\n    // console.log(this.allData);\n    // 当数据加载成功调用\n\n    setTimeout(() => {\n      this.echartsInit();\n    }, 500);\n  },\n\n  methods: {\n    echartsInit() {\n      // 基于准备好的dom，初始化echarts实例\n      let ehartsref = this.$refs.charts;\n      // let myChart = this.$echarts.init(document.getElementById(\"map\"));\n      let myChart = echarts.init(ehartsref);\n      // 绘制表格\n      myChart.setOption({\n        title: {\n          text: \"生源地学生分布\",\n          top: \"5%\",\n          left: \"3%\",\n          textStyle: {\n            fontSize: 18,\n            fontWeight: \"lighter\",\n          },\n        },\n        tooltip: {},\n        toolbox: {\n          show: true,\n          orient: \"vertical\",\n          left: \"right\",\n          top: \"center\",\n          feature: {\n            dataView: { readOnly: false },\n            restore: {},\n            saveAsImage: {},\n          },\n        },\n        visualMap: {\n          min: 0,\n          max: 2500,\n          text: [\"High\", \"Low\"],\n          realtime: false,\n          calculable: true,\n          inRange: {\n            color: [\"lightskyblue\", \"yellow\", \"orangered\"],\n          },\n        },\n        series: [\n          {\n            name: \"总数\",\n            type: \"map\",\n            map: \"china\",\n            label: {\n              show: true,\n            },\n            data: this.allData,\n          },\n        ],\n      });\n    },\n\n    // 数据请求\n    async getSelectClassNuber() {\n      let result = await selectProvince();\n      // console.log(result);\n      // this.allData = result.data.data;\n      // // console.log(this.allData);\n      // let that = this;\n      // this.allData.forEach((element, index) => {\n      //   that.xData[index] = element.name;\n      //   that.sData[index] = element.number;\n      // });\n      // console.log(result);\n      this.allData.push(...result.data);\n      // console.log(this.allData);\n    },\n  },\n};\n</script>\n<style lang='scss' scoped>\n.emap {\n  background-color: #fff;\n}\n</style>"],"sourceRoot":"src/views/stuCharts/components"}]}