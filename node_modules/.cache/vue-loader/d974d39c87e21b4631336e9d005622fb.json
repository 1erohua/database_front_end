{"remainingRequest":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/src/views/stuCharts/components/Emap.vue?vue&type=style&index=0&id=24ec4640&lang=scss&scoped=true&","dependencies":[{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/src/views/stuCharts/components/Emap.vue","mtime":1651133434000},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/css-loader/dist/cjs.js","mtime":1735892181739},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1735892182207},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/postcss-loader/src/index.js","mtime":1735892181895},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/sass-loader/dist/cjs.js","mtime":1735892181443},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/cache-loader/dist/cjs.js","mtime":1735892181475},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/vue-loader/lib/index.js","mtime":1735892182047}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lbWFwIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwp9Cg=="},{"version":3,"sources":["Emap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHA;AACA;AACA","file":"Emap.vue","sourceRoot":"src/views/stuCharts/components","sourcesContent":["<template>\n  <div\n    class=\"emap\"\n    id=\"emap\"\n    ref=\"charts\"\n    :style=\"{ width: '100%', height: '400px' }\"\n  ></div>\n</template>\n\n<script>\n// 引入基本模板\n// let echarts = require('echarts/lib/echarts')\nimport echarts from \"echarts\";\nimport \"echarts/map/js/china.js\";\nimport { selectProvince } from \"@/api/request\";\n// 引入柱状图组件\nrequire(\"echarts/lib/chart/bar\");\n// 引入提示框和title组件\nrequire(\"echarts/lib/component/tooltip\");\nrequire(\"echarts/lib/component/title\");\n\nexport default {\n  name: \"emap\",\n  data() {\n    return {\n      allData: [],\n    };\n  },\n  created() {\n    this.getSelectClassNuber();\n  },\n  mounted() {\n    // console.log(this.allData);\n    // 当数据加载成功调用\n\n    setTimeout(() => {\n      this.echartsInit();\n    }, 500);\n  },\n\n  methods: {\n    echartsInit() {\n      // 基于准备好的dom，初始化echarts实例\n      let ehartsref = this.$refs.charts;\n      // let myChart = this.$echarts.init(document.getElementById(\"map\"));\n      let myChart = echarts.init(ehartsref);\n      // 绘制表格\n      myChart.setOption({\n        title: {\n          text: \"生源地学生分布\",\n          top: \"5%\",\n          left: \"3%\",\n          textStyle: {\n            fontSize: 18,\n            fontWeight: \"lighter\",\n          },\n        },\n        tooltip: {},\n        toolbox: {\n          show: true,\n          orient: \"vertical\",\n          left: \"right\",\n          top: \"center\",\n          feature: {\n            dataView: { readOnly: false },\n            restore: {},\n            saveAsImage: {},\n          },\n        },\n        visualMap: {\n          min: 0,\n          max: 2500,\n          text: [\"High\", \"Low\"],\n          realtime: false,\n          calculable: true,\n          inRange: {\n            color: [\"lightskyblue\", \"yellow\", \"orangered\"],\n          },\n        },\n        series: [\n          {\n            name: \"总数\",\n            type: \"map\",\n            map: \"china\",\n            label: {\n              show: true,\n            },\n            data: this.allData,\n          },\n        ],\n      });\n    },\n\n    // 数据请求\n    async getSelectClassNuber() {\n      let result = await selectProvince();\n      // console.log(result);\n      // this.allData = result.data.data;\n      // // console.log(this.allData);\n      // let that = this;\n      // this.allData.forEach((element, index) => {\n      //   that.xData[index] = element.name;\n      //   that.sData[index] = element.number;\n      // });\n      // console.log(result);\n      this.allData.push(...result.data);\n      // console.log(this.allData);\n    },\n  },\n};\n</script>\n<style lang='scss' scoped>\n.emap {\n  background-color: #fff;\n}\n</style>"]}]}