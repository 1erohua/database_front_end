{"remainingRequest":"/home/zerohua/application/FrontEnd/tset/database_front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/zerohua/application/FrontEnd/tset/database_front_end/src/views/fan/fan_review/fan_review.vue?vue&type=style&index=0&id=4ac03ec9&lang=scss&scoped=true&","dependencies":[{"path":"/home/zerohua/application/FrontEnd/tset/database_front_end/src/views/fan/fan_review/fan_review.vue","mtime":1735999340465},{"path":"/home/zerohua/application/FrontEnd/tset/database_front_end/node_modules/css-loader/dist/cjs.js","mtime":1736410806225},{"path":"/home/zerohua/application/FrontEnd/tset/database_front_end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1736410806610},{"path":"/home/zerohua/application/FrontEnd/tset/database_front_end/node_modules/postcss-loader/src/index.js","mtime":1736410806346},{"path":"/home/zerohua/application/FrontEnd/tset/database_front_end/node_modules/sass-loader/dist/cjs.js","mtime":1736410805953},{"path":"/home/zerohua/application/FrontEnd/tset/database_front_end/node_modules/cache-loader/dist/cjs.js","mtime":1736410805991},{"path":"/home/zerohua/application/FrontEnd/tset/database_front_end/node_modules/vue-loader/lib/index.js","mtime":1736410806488}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5iYXRjaE9wdGlvbiB7CiAgbWFyZ2luLWJvdHRvbTogNXB4OwogIC5lbC1idXR0b24gewogICAgZm9udC1zaXplOiAxMHB4OwogICAgcGFkZGluZzogNXB4OwogIH0KfQo="},{"version":3,"sources":["fan_review.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA;AACA;AACA;AACA;AACA;AACA;AACA","file":"fan_review.vue","sourceRoot":"src/views/fan/fan_review","sourcesContent":["<template>\n  <div class=\"fan-review\">\n    <div class=\"container_wrap\">\n      <div class=\"batchOption\">\n        <el-button icon=\"el-icon-plus\" type=\"success\" @click=\"newReview($event)\"\n          >新增评论</el-button\n        >\n      </div>\n\n      <el-table :data=\"tableData\" border class=\"\">\n        <el-table-column prop=\"AlbumID\" label=\"专辑ID\" width=\"150\">\n        </el-table-column>\n        <el-table-column prop=\"Comment\" label=\"评论内容\" width=\"300\">\n        </el-table-column>\n        <el-table-column prop=\"Rating\" label=\"评分\" width=\"150\">\n        </el-table-column>\n        <el-table-column prop=\"ReviewDate\" label=\"评论日期\" width=\"150\">\n        </el-table-column>\n\n        <el-table-column label=\"操作\">\n          <template slot-scope=\"scope\">\n            <el-button\n              size=\"mini\"\n              icon=\"el-icon-edit\"\n              @click=\"handleEdit(scope.$index, scope.row)\"\n              >修改</el-button\n            >\n            <el-button\n              size=\"mini\"\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              @click=\"handleDelete(scope.$index, scope.row)\"\n              >删除</el-button\n            >\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n\n    <!-- 弹窗 -->\n    <Dialog\n      :dialogEditVisible=\"dialogEditVisible\"\n      :reviewInfo=\"reviewInfo\"\n      @updateReview=\"updateReview\"\n    ></Dialog>\n  </div>\n</template>\n\n<script>\nimport { addAlbumReview, rateAlbum, getBandAlbumReviews } from \"@/api/request\";\nimport Dialog from \"./Dialog.vue\";\n\nexport default {\n  name: \"FanReview\",\n  components: {\n    Dialog,\n  },\n  created() {\n    // 获取当前粉丝的评论信息\n    this.getReviewMes();\n  },\n  data() {\n    return {\n      tableData: [],\n      dialogEditVisible: { value: false },\n      reviewInfo: {},\n    };\n  },\n  methods: {\n    // 获取评论信息\n    getReviewMes() {\n      const fanId = this.$store.state.fanId;\n      getBandAlbumReviews(fanId).then((res) => {\n        this.tableData = res.data;\n      });\n    },\n    // 新增评论\n    newReview(event) {\n      this.lostBlur(event);\n      this.reviewInfo = {}; // 清空表单\n      this.dialogEditVisible.value = true;\n    },\n    // 修改评论\n    handleEdit(index, row) {\n      this.reviewInfo = row;\n      this.dialogEditVisible.value = true;\n    },\n    // 删除评论\n    handleDelete(index, row) {\n      this.$confirm(\"确认删除？\")\n        .then(() => {\n          deleteAlbumReview(row.ReviewID)\n            .then(() => {\n              this.$message({\n                type: \"success\",\n                message: \"删除成功!\",\n              });\n              this.getReviewMes();\n            })\n            .catch((err) => {\n              this.$message.error(\"删除失败!\");\n            });\n        })\n        .catch(() => {\n          this.$message({\n            type: \"info\",\n            message: \"已取消删除\",\n          });\n        });\n    },\n    // 失焦处理\n    lostBlur(event) {\n      let target = event.target;\n      if (target.nodeName == \"SPAN\") {\n        target = event.target.parentNode;\n      }\n      target.blur();\n    },\n    // 更新评论信息\n    updateReview(data) {\n      this.getReviewMes();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.batchOption {\n  margin-bottom: 5px;\n  .el-button {\n    font-size: 10px;\n    padding: 5px;\n  }\n}\n</style>"]}]}