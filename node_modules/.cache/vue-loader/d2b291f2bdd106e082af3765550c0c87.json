{"remainingRequest":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/src/views/fan/fan_heLikes/fan_heLikes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/src/views/fan/fan_heLikes/fan_heLikes.vue","mtime":1735991229683},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/cache-loader/dist/cjs.js","mtime":1735892181475},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/babel-loader/lib/index.js","mtime":1735892181655},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/cache-loader/dist/cjs.js","mtime":1735892181475},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/vue-loader/lib/index.js","mtime":1735892182047}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldEZhbkxpa2VkQmFuZHMsIGdldEZhbkxpa2VkQWxidW1zLCBnZXRGYW5MaWtlZFNvbmdzLCBnZXRGYW5BdHRlbmRlZENvbmNlcnRzLCBhZGRMaWtlZEJhbmQsIGFkZExpa2VkQWxidW0sIGFkZExpa2VkU29uZywgYWRkQXR0ZW5kZWRDb25jZXJ0LCByZW1vdmVMaWtlZEJhbmQsIHJlbW92ZUxpa2VkQWxidW0sIHJlbW92ZUxpa2VkU29uZywgcmVtb3ZlQXR0ZW5kZWRDb25jZXJ0IH0gZnJvbSAiQC9hcGkvcmVxdWVzdCI7CmltcG9ydCBEaWFsb2cgZnJvbSAiLi9EaWFsb2cudnVlIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRmFuSGVMaWtlcyIsCiAgY29tcG9uZW50czogewogICAgRGlhbG9nLAogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0RmFuRGF0YSgpOwogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhYmxlRGF0YTogW10sCiAgICAgIGRpYWxvZ0VkaXRWaXNpYmxlOiB7IHZhbHVlOiBmYWxzZSB9LAogICAgICBmb3JtRGF0YToge30sCiAgICAgIHNlbGVjdGVkRGF0YTogW10sCiAgICAgIGN1cnJlbnRUeXBlOiAnJywKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDojrflj5bkuZDov7fmlbDmja4KICAgIGdldEZhbkRhdGEoKSB7CiAgICAgIGNvbnN0IGZhbklkID0gdGhpcy4kc3RvcmUuc3RhdGUuZmFuSWQ7CiAgICAgIFByb21pc2UuYWxsKFsKICAgICAgICBnZXRGYW5MaWtlZEJhbmRzKGZhbklkKSwKICAgICAgICBnZXRGYW5MaWtlZEFsYnVtcyhmYW5JZCksCiAgICAgICAgZ2V0RmFuTGlrZWRTb25ncyhmYW5JZCksCiAgICAgICAgZ2V0RmFuQXR0ZW5kZWRDb25jZXJ0cyhmYW5JZCksCiAgICAgIF0pLnRoZW4oKFtiYW5kcywgYWxidW1zLCBzb25ncywgY29uY2VydHNdKSA9PiB7CiAgICAgICAgdGhpcy50YWJsZURhdGEgPSBbCiAgICAgICAgICAuLi5iYW5kcy5kYXRhLm1hcChiYW5kID0+ICh7IC4uLmJhbmQsIHR5cGU6ICdCYW5kJywgbmFtZTogYmFuZC5CYW5kTmFtZSB9KSksCiAgICAgICAgICAuLi5hbGJ1bXMuZGF0YS5tYXAoYWxidW0gPT4gKHsgLi4uYWxidW0sIHR5cGU6ICdBbGJ1bScsIG5hbWU6IGFsYnVtLkFsYnVtTmFtZSB9KSksCiAgICAgICAgICAuLi5zb25ncy5kYXRhLm1hcChzb25nID0+ICh7IC4uLnNvbmcsIHR5cGU6ICdTb25nJywgbmFtZTogc29uZy5Tb25nTmFtZSB9KSksCiAgICAgICAgICAuLi5jb25jZXJ0cy5kYXRhLm1hcChjb25jZXJ0ID0+ICh7IC4uLmNvbmNlcnQsIHR5cGU6ICdDb25jZXJ0JywgbmFtZTogY29uY2VydC5Db25jZXJ0TmFtZSB9KSksCiAgICAgICAgXTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5paw5aKe5pWw5o2uCiAgICBuZXdBZGQodHlwZSkgewogICAgICB0aGlzLmN1cnJlbnRUeXBlID0gdHlwZTsKICAgICAgdGhpcy5mb3JtRGF0YSA9IHsgdHlwZSB9OwogICAgICB0aGlzLmRpYWxvZ0VkaXRWaXNpYmxlLnZhbHVlID0gdHJ1ZTsKICAgIH0sCiAgICAvLyDkv67mlLnmlbDmja4KICAgIGhhbmRsZUVkaXQoaW5kZXgsIHJvdykgewogICAgICB0aGlzLmN1cnJlbnRUeXBlID0gcm93LnR5cGU7CiAgICAgIHRoaXMuZm9ybURhdGEgPSB7IC4uLnJvdyB9OwogICAgICB0aGlzLmRpYWxvZ0VkaXRWaXNpYmxlLnZhbHVlID0gdHJ1ZTsKICAgIH0sCiAgICAvLyDliKDpmaTmlbDmja4KICAgIGhhbmRsZURlbGV0ZShpbmRleCwgcm93KSB7CiAgICAgIGNvbnN0IGZhbklkID0gdGhpcy4kc3RvcmUuc3RhdGUuZmFuSWQ7CiAgICAgIHRoaXMuJGNvbmZpcm0oIuehruiupOWIoOmZpO+8nyIpCiAgICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgICAgbGV0IGRlbGV0ZVByb21pc2U7CiAgICAgICAgICBzd2l0Y2ggKHJvdy50eXBlKSB7CiAgICAgICAgICAgIGNhc2UgJ0JhbmQnOgogICAgICAgICAgICAgIGRlbGV0ZVByb21pc2UgPSByZW1vdmVMaWtlZEJhbmQoZmFuSWQsIHJvdy5CYW5kSUQpOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlICdBbGJ1bSc6CiAgICAgICAgICAgICAgZGVsZXRlUHJvbWlzZSA9IHJlbW92ZUxpa2VkQWxidW0oZmFuSWQsIHJvdy5BbGJ1bUlEKTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAnU29uZyc6CiAgICAgICAgICAgICAgZGVsZXRlUHJvbWlzZSA9IHJlbW92ZUxpa2VkU29uZyhmYW5JZCwgcm93LlNvbmdJRCk7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgJ0NvbmNlcnQnOgogICAgICAgICAgICAgIGRlbGV0ZVByb21pc2UgPSByZW1vdmVBdHRlbmRlZENvbmNlcnQoZmFuSWQsIHJvdy5Db25jZXJ0SUQpOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgICAgZGVsZXRlUHJvbWlzZS50aGVuKCgpID0+IHsKICAgICAgICAgICAgdGhpcy4kbWVzc2FnZSh7IHR5cGU6ICJTdWNjZXNzIiwgbWVzc2FnZTogIuWIoOmZpOaIkOWKnyEiIH0pOwogICAgICAgICAgICB0aGlzLmdldEZhbkRhdGEoKTsKICAgICAgICAgIH0pLmNhdGNoKCgpID0+IHsKICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcigi5Yig6Zmk5aSx6LSlISIpOwogICAgICAgICAgfSk7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKCkgPT4gewogICAgICAgICAgdGhpcy4kbWVzc2FnZSh7IHR5cGU6ICJJbmZvIiwgbWVzc2FnZTogIuW3suWPlua2iOWIoOmZpCIgfSk7CiAgICAgICAgfSk7CiAgICB9LAogICAgLy8g5Yi35paw5pWw5o2uCiAgICByZWZyZXNoKGV2ZW50KSB7CiAgICAgIHRoaXMubG9zdEJsdXIoZXZlbnQpOwogICAgICB0aGlzLmdldEZhbkRhdGEoKTsKICAgIH0sCiAgICAvLyDlpITnkIbpgInkuK3pobkKICAgIGhhbmRsZUN1cnJlbnRDaGFuZ2Uocm93cykgewogICAgICB0aGlzLnNlbGVjdGVkRGF0YSA9IHJvd3M7CiAgICB9LAogICAgLy8g5aSx54Sm5aSE55CGCiAgICBsb3N0Qmx1cihldmVudCkgewogICAgICBsZXQgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0OwogICAgICBpZiAodGFyZ2V0Lm5vZGVOYW1lID09ICJTUEFOIikgewogICAgICAgIHRhcmdldCA9IGV2ZW50LnRhcmdldC5wYXJlbnROb2RlOwogICAgICB9CiAgICAgIHRhcmdldC5ibHVyKCk7CiAgICB9LAogICAgLy8g5pu05paw5pWw5o2uCiAgICB1cGRhdGVEYXRhKGRhdGEpIHsKICAgICAgY29uc3QgZmFuSWQgPSB0aGlzLiRzdG9yZS5zdGF0ZS5mYW5JZDsKICAgICAgbGV0IGFkZFByb21pc2U7CiAgICAgIHN3aXRjaCAodGhpcy5jdXJyZW50VHlwZSkgewogICAgICAgIGNhc2UgJ0JhbmQnOgogICAgICAgICAgYWRkUHJvbWlzZSA9IGFkZExpa2VkQmFuZChmYW5JZCwgZGF0YS5CYW5kSUQpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnQWxidW0nOgogICAgICAgICAgYWRkUHJvbWlzZSA9IGFkZExpa2VkQWxidW0oZmFuSWQsIGRhdGEuQWxidW1JRCk7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdTb25nJzoKICAgICAgICAgIGFkZFByb21pc2UgPSBhZGRMaWtlZFNvbmcoZmFuSWQsIGRhdGEuU29uZ0lEKTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ0NvbmNlcnQnOgogICAgICAgICAgYWRkUHJvbWlzZSA9IGFkZEF0dGVuZGVkQ29uY2VydChmYW5JZCwgZGF0YS5Db25jZXJ0SUQpOwogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgYWRkUHJvbWlzZS50aGVuKCgpID0+IHsKICAgICAgICB0aGlzLiRtZXNzYWdlKHsgdHlwZTogIlN1Y2Nlc3MiLCBtZXNzYWdlOiAi5pON5L2c5oiQ5YqfISIgfSk7CiAgICAgICAgdGhpcy5nZXRGYW5EYXRhKCk7CiAgICAgIH0pLmNhdGNoKCgpID0+IHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCLmk43kvZzlpLHotKUhIik7CiAgICAgIH0pOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["fan_heLikes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"fan_heLikes.vue","sourceRoot":"src/views/fan/fan_heLikes","sourcesContent":["<template>\n  <div class=\"fan-likes\">\n    <div class=\"container_wrap\">\n      <div class=\"batchOption\">\n        <el-button class=\"large-button\" icon=\"el-icon-plus\" type=\"success\" @click=\"newAdd('Band')\"\n          >新增喜欢的乐队</el-button\n        >\n        <el-button class=\"large-button\" icon=\"el-icon-plus\" type=\"success\" @click=\"newAdd('Album')\"\n          >新增喜欢的专辑</el-button\n        >\n        <el-button class=\"large-button\" icon=\"el-icon-plus\" type=\"success\" @click=\"newAdd('Song')\"\n          >新增喜欢的歌曲</el-button\n        >\n        <el-button class=\"large-button\" icon=\"el-icon-plus\" type=\"success\" @click=\"newAdd('Concert')\"\n          >新增参加的演唱会</el-button\n        >\n        <el-button\n          icon=\"el-icon-refresh\"\n          type=\"warning\"\n          @click=\"refresh($event)\"\n          >刷新</el-button\n        >\n      </div>\n\n      <el-table :data=\"tableData\" border @selection-change=\"handleCurrentChange\">\n        <el-table-column type=\"expand\">\n          <template slot-scope=\"props\">\n            <p v-if=\"props.row.type === 'Band'\">乐队ID: {{ props.row.BandID }}</p>\n            <p v-if=\"props.row.type === 'Album'\">专辑ID: {{ props.row.AlbumID }}</p>\n            <p v-if=\"props.row.type === 'Song'\">歌曲ID: {{ props.row.SongID }}</p>\n            <p v-if=\"props.row.type === 'Concert'\">演唱会ID: {{ props.row.ConcertID }}</p>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"type\" label=\"类型\" width=\"120\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.type === 'Band' ? '乐队' : scope.row.type === 'Album' ? '专辑' : scope.row.type === 'Song' ? '歌曲' : '演唱会' }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"name\" label=\"名称\" width=\"150\"></el-table-column>\n        <el-table-column label=\"操作\">\n          <template slot-scope=\"scope\">\n            <el-button\n              size=\"medium\"\n              icon=\"el-icon-edit\"\n              @click=\"handleEdit(scope.$index, scope.row)\"\n              >修改</el-button\n            >\n            <el-button\n              size=\"mini\"\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              @click=\"handleDelete(scope.$index, scope.row)\"\n              >删除</el-button\n            >\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n\n    <!-- 弹窗 -->\n    <Dialog\n      :dialogEditVisible=\"dialogEditVisible\"\n      :formData=\"formData\"\n      @updateData=\"updateData\"\n    ></Dialog>\n  </div>\n</template>\n\n<script>\nimport { getFanLikedBands, getFanLikedAlbums, getFanLikedSongs, getFanAttendedConcerts, addLikedBand, addLikedAlbum, addLikedSong, addAttendedConcert, removeLikedBand, removeLikedAlbum, removeLikedSong, removeAttendedConcert } from \"@/api/request\";\nimport Dialog from \"./Dialog.vue\";\n\nexport default {\n  name: \"FanHeLikes\",\n  components: {\n    Dialog,\n  },\n  created() {\n    this.getFanData();\n  },\n  data() {\n    return {\n      tableData: [],\n      dialogEditVisible: { value: false },\n      formData: {},\n      selectedData: [],\n      currentType: '',\n    };\n  },\n  methods: {\n    // 获取乐迷数据\n    getFanData() {\n      const fanId = this.$store.state.fanId;\n      Promise.all([\n        getFanLikedBands(fanId),\n        getFanLikedAlbums(fanId),\n        getFanLikedSongs(fanId),\n        getFanAttendedConcerts(fanId),\n      ]).then(([bands, albums, songs, concerts]) => {\n        this.tableData = [\n          ...bands.data.map(band => ({ ...band, type: 'Band', name: band.BandName })),\n          ...albums.data.map(album => ({ ...album, type: 'Album', name: album.AlbumName })),\n          ...songs.data.map(song => ({ ...song, type: 'Song', name: song.SongName })),\n          ...concerts.data.map(concert => ({ ...concert, type: 'Concert', name: concert.ConcertName })),\n        ];\n      });\n    },\n    // 新增数据\n    newAdd(type) {\n      this.currentType = type;\n      this.formData = { type };\n      this.dialogEditVisible.value = true;\n    },\n    // 修改数据\n    handleEdit(index, row) {\n      this.currentType = row.type;\n      this.formData = { ...row };\n      this.dialogEditVisible.value = true;\n    },\n    // 删除数据\n    handleDelete(index, row) {\n      const fanId = this.$store.state.fanId;\n      this.$confirm(\"确认删除？\")\n        .then(() => {\n          let deletePromise;\n          switch (row.type) {\n            case 'Band':\n              deletePromise = removeLikedBand(fanId, row.BandID);\n              break;\n            case 'Album':\n              deletePromise = removeLikedAlbum(fanId, row.AlbumID);\n              break;\n            case 'Song':\n              deletePromise = removeLikedSong(fanId, row.SongID);\n              break;\n            case 'Concert':\n              deletePromise = removeAttendedConcert(fanId, row.ConcertID);\n              break;\n          }\n          deletePromise.then(() => {\n            this.$message({ type: \"Success\", message: \"删除成功!\" });\n            this.getFanData();\n          }).catch(() => {\n            this.$message.error(\"删除失败!\");\n          });\n        })\n        .catch(() => {\n          this.$message({ type: \"Info\", message: \"已取消删除\" });\n        });\n    },\n    // 刷新数据\n    refresh(event) {\n      this.lostBlur(event);\n      this.getFanData();\n    },\n    // 处理选中项\n    handleCurrentChange(rows) {\n      this.selectedData = rows;\n    },\n    // 失焦处理\n    lostBlur(event) {\n      let target = event.target;\n      if (target.nodeName == \"SPAN\") {\n        target = event.target.parentNode;\n      }\n      target.blur();\n    },\n    // 更新数据\n    updateData(data) {\n      const fanId = this.$store.state.fanId;\n      let addPromise;\n      switch (this.currentType) {\n        case 'Band':\n          addPromise = addLikedBand(fanId, data.BandID);\n          break;\n        case 'Album':\n          addPromise = addLikedAlbum(fanId, data.AlbumID);\n          break;\n        case 'Song':\n          addPromise = addLikedSong(fanId, data.SongID);\n          break;\n        case 'Concert':\n          addPromise = addAttendedConcert(fanId, data.ConcertID);\n          break;\n      }\n      addPromise.then(() => {\n        this.$message({ type: \"Success\", message: \"操作成功!\" });\n        this.getFanData();\n      }).catch(() => {\n        this.$message.error(\"操作失败!\");\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.batchOption {\n  margin-bottom: 5px;\n  .el-button {\n    font-size: 10px;\n    padding: 5px;\n  }\n}\n.large-button {\n  padding: 35px 50px; /* 调整按钮的内边距 */\n  font-size: 16px; /* 调整按钮的字体大小 */\n}\n</style>"]}]}