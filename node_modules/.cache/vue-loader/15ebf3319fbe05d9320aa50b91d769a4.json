{"remainingRequest":"/home/zerohua/application/FrontEnd/tset/database_front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/zerohua/application/FrontEnd/tset/database_front_end/src/layout/sidebar/SidebarItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/zerohua/application/FrontEnd/tset/database_front_end/src/layout/sidebar/SidebarItem.vue","mtime":1736006257229},{"path":"/home/zerohua/application/FrontEnd/tset/database_front_end/node_modules/cache-loader/dist/cjs.js","mtime":1736410805991},{"path":"/home/zerohua/application/FrontEnd/tset/database_front_end/node_modules/babel-loader/lib/index.js","mtime":1736410806162},{"path":"/home/zerohua/application/FrontEnd/tset/database_front_end/node_modules/cache-loader/dist/cjs.js","mtime":1736410805991},{"path":"/home/zerohua/application/FrontEnd/tset/database_front_end/node_modules/vue-loader/lib/index.js","mtime":1736410806488}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU2lkZWJhckl0ZW0iLAogIGRhdGEoKSB7CiAgICByZXR1cm4ge307CiAgfSwKICBwcm9wczogewogICAgaXRlbTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgfSwKICAgIHJvdXRpbmRleDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICB9LAogIH0sCgogIG1vdW50ZWQoKSB7fSwKCiAgbWV0aG9kczogewogICAgc2VsZWN0bWVudShpdGVtKXsKICAgICAgLy8gY29uc29sZS5sb2coaXRlbSk7CiAgICAgIGxldCB0YWcgPSB7fQogICAgICB0YWdbJ25hbWUnXSA9IGl0ZW0ubmFtZQogICAgICB0YWdbJ3BhdGgnXSA9IGl0ZW0ucGF0aAogICAgICB0YWdbJ2xhYmVsJ10gPSBpdGVtLm1ldGEudGl0bGUKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZWxlY3RtZW51Jyx0YWcpCiAgICB9CiAgfSwKfTsK"},{"version":3,"sources":["SidebarItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SidebarItem.vue","sourceRoot":"src/layout/sidebar","sourcesContent":["<template>\n  <!-- 判断是否为路由hidden -->\n  <fragment v-if=\"!item.hidden\">\n    <!-- 判断是否有子路由 -->\n    <el-submenu v-if=\"item.children\" :index=\"item.path\">\n      <template slot=\"title\">\n        <i :class=\"item.meta.icon\"></i>\n        <span slot=\"title\">{{ item.meta.title }}</span>\n      </template>\n      <div v-if=\"item.children\">\n        \n          <el-menu-item\n            v-for=\"routeChild in item.children\"\n            :key=\"routeChild.path\"\n            :index=\"routeChild.path\"\n            @click=\"selectmenu(routeChild)\"\n          >\n            <i :class=\"routeChild.meta.icon\"></i>\n            <span >{{ routeChild.meta.title }}</span>\n          </el-menu-item>\n        \n      </div>\n    </el-submenu>\n    <!-- 没有子路由 -->\n    <el-menu-item v-else :index=\"item.path\">\n      <i class=\"el-icon-menu\"></i>\n      <span slot=\"title\">{{ item.meta.title }}</span>\n    </el-menu-item>\n  </fragment>\n</template>\n\n<script>\nexport default {\n  name: \"SidebarItem\",\n  data() {\n    return {};\n  },\n  props: {\n    item: {\n      type: Object,\n      required: true,\n    },\n    routindex: {\n      type: Number,\n    },\n  },\n\n  mounted() {},\n\n  methods: {\n    selectmenu(item){\n      // console.log(item);\n      let tag = {}\n      tag['name'] = item.name\n      tag['path'] = item.path\n      tag['label'] = item.meta.title\n      this.$store.commit('selectmenu',tag)\n    }\n  },\n};\n</script>\n<style lang='scss' scoped>\n.el-menu-item-group__title {\n  padding: 0;\n}\n</style>"]}]}