{"remainingRequest":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/src/views/fan/fan_review/fan_review.vue?vue&type=style&index=0&id=4ac03ec9&lang=scss&scoped=true&","dependencies":[{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/src/views/fan/fan_review/fan_review.vue","mtime":1736512644885},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/css-loader/dist/cjs.js","mtime":1735892181739},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1735892182207},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/postcss-loader/src/index.js","mtime":1735892181895},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/sass-loader/dist/cjs.js","mtime":1735892181443},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/cache-loader/dist/cjs.js","mtime":1735892181475},{"path":"/home/zerohua/application/FrontEnd/tset/stu_manage_front-main/node_modules/vue-loader/lib/index.js","mtime":1735892182047}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZmFuLXJldmlldyB7CiAgLmJhdGNoT3B0aW9uIHsKICAgIG1hcmdpbi1ib3R0b206IDVweDsKICAgIC5lbC1idXR0b24gewogICAgICBmb250LXNpemU6IDEwcHg7CiAgICAgIHBhZGRpbmc6IDVweDsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["fan_review.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"fan_review.vue","sourceRoot":"src/views/fan/fan_review","sourcesContent":["<template>\n  <div class=\"fan-review\">\n    <div class=\"container_wrap\">\n      <div class=\"batchOption\">\n        <el-button icon=\"el-icon-plus\" type=\"success\" @click=\"openDialog\">发表评论</el-button>\n        <el-button icon=\"el-icon-delete\" type=\"danger\" @click=\"batchDelete\">删除选中</el-button>\n        <el-button icon=\"el-icon-refresh\" type=\"warning\" @click=\"refresh\">刷新评论</el-button>\n      </div>\n\n      <el-table :data=\"reviewData\" border @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\"> </el-table-column>\n        <el-table-column prop=\"ReviewID\" label=\"评论ID\" width=\"100\"> </el-table-column>\n        <el-table-column prop=\"AlbumID\" label=\"专辑ID\" width=\"100\"> </el-table-column>\n        <el-table-column prop=\"Comment\" label=\"评论内容\" width=\"200\"> </el-table-column>\n        <el-table-column prop=\"Rating\" label=\"评分\" width=\"100\"> </el-table-column>\n        <el-table-column prop=\"ReviewDate\" label=\"评论日期\" width=\"150\">\n          <template slot-scope=\"scope\">\n            <!-- 格式化日期为 YYYY-MM-DD -->\n            {{ formatDate(scope.row.ReviewDate) }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\">\n          <template slot-scope=\"scope\">\n            <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\" @click=\"handleDelete(scope.row.ReviewID)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n\n    <!-- 发表评论弹窗 -->\n    <ReviewDialog :dialogVisible=\"dialogVisible\" @closeDialog=\"closeDialog\" @submitReview=\"submitReview\"></ReviewDialog>\n  </div>\n</template>\n\n<script>\nimport { getFanReviews, deleteAlbumReview, addAlbumReview } from \"@/api/request\";\nimport ReviewDialog from \"./ReviewDialog.vue\";\nimport { mapState } from \"vuex\";\n\nexport default {\n  name: \"FanReview\",\n  components: {\n    ReviewDialog,\n  },\n  data() {\n    return {\n      reviewData: [],\n      dialogVisible: false,\n      selectedReviews: [],\n    };\n  },\n  computed: {\n    ...mapState({\n      fanId: (state) => state.fanId, // 从 store 中获取当前歌迷的 fanId\n    }),\n  },\n  created() {\n    this.getReviews();\n  },\n  methods: {\n    // 获取评论\n    getReviews() {\n      getFanReviews(this.fanId).then((res) => {\n        let { reviews } = res.data;\n        if (Array.isArray(reviews)) {\n          this.reviewData = reviews; // 直接赋值\n        } else {\n          console.error('Expected an array, but got:', typeof res.data);\n          this.reviewData = []; // 如果数据格式不正确，设置为空数组\n        }\n      }).catch((error) => {\n        console.error('Failed to fetch reviews:', error);\n        this.reviewData = []; // 如果请求失败，设置为空数组\n      });\n    },\n    // 格式化日期为 YYYY-MM-DD\n    formatDate(date) {\n      const d = new Date(date);\n      const year = d.getFullYear();\n      const month = (d.getMonth() + 1).toString().padStart(2, \"0\");\n      const day = d.getDate().toString().padStart(2, \"0\");\n      return `${year}-${month}-${day}`;\n    },\n    // 打开发表评论弹窗\n    openDialog() {\n      this.dialogVisible = true;\n    },\n    // 关闭弹窗\n    closeDialog() {\n      this.dialogVisible = false;\n    },\n    // 提交评论\n    submitReview(data) {\n      // 生成当前日期，格式为 YYYY-MM-DD\n      const currentDate = new Date().toISOString().split('T')[0]; // 提取 YYYY-MM-DD 部分\n      const reviewData = {\n        ...data,\n        ReviewDate: currentDate, // 添加评论日期\n      };\n\n      addAlbumReview(this.fanId, data.AlbumID, reviewData).then(() => {\n        this.$message({ message: \"评论发表成功\", type: \"success\" });\n        this.getReviews();\n        this.closeDialog();\n      });\n    },\n    // 删除评论\n    handleDelete(reviewId) {\n      this.$confirm(\"确认删除该评论？\")\n        .then(() => {\n          deleteAlbumReview(this.fanId, reviewId).then(() => {\n            this.$message({ message: \"删除成功\", type: \"success\" });\n            this.getReviews();\n          });\n        })\n        .catch(() => {\n          this.$message({ type: \"info\", message: \"已取消删除\" });\n        });\n    },\n    // 批量删除\n    batchDelete() {\n      this.$confirm(\"确认删除选中评论？\")\n        .then(() => {\n          this.selectedReviews.forEach((reviewId) => {\n            deleteAlbumReview(this.fanId, reviewId);\n          });\n          this.$message({ message: \"批量删除成功\", type: \"success\" });\n          this.getReviews();\n        })\n        .catch(() => {\n          this.$message({ type: \"info\", message: \"已取消删除\" });\n        });\n    },\n    // 刷新评论\n    refresh() {\n      this.getReviews();\n    },\n    // 处理选中项\n    handleSelectionChange(rows) {\n      this.selectedReviews = rows.map((row) => row.ReviewID);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.fan-review {\n  .batchOption {\n    margin-bottom: 5px;\n    .el-button {\n      font-size: 10px;\n      padding: 5px;\n    }\n  }\n}\n</style>\n"]}]}